wip:
  fail

on:
  push:
    paths-ignore:
      - '.gitignore'
      - '**.md'
      - '**.gd'
      - '**.tscn'
      - '**.import'
      - 'live2d/**'
      - '3d/**'
      - 'ext/**'
      - 'scenes/**'
  pull-request:
    
jobs:
  therac_sim:
    uses: pillowtrucker/hstherac25/.github/workflows/build.yml@main
    with:
      therac_sim_subdirectory: ext/therac_sim
  gd_cubism:
    uses: pillowtrucker/gd_cubism/.github/workflows/bazinga.yml@mine
    with:
      subdirectory: ext/gd_cubism
  tooting:
    uses: wonky-honky/tooting/.github/workflows/main.yml@master
    with:
      subdirectory: ext/tooting
  bundle:
    needs: [therac_sim,gd_cubism,tooting]
    name: bundle up game on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/download-artifact@v4
        with:
          name: tooting-Release # TODO: move libfurnace.so to the right place
          path: prebuilt/tooting
      - uses: actions/download-artifact@v4
        with:
          name: therac_sim-Release # TODO: actually copy/move hstherac to this artifact
          path: prebuilt/therac_sim
      - name: Download godot linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        id: download-godot-artifact-linux
        uses: dawidd6/action-download-artifact@v3
        with:
          # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
          # Required, if the artifact is from a different repo
          # Required, if the repo is private a Personal Access Token with `repo` scope is needed or GitHub token in a job where the permissions `action` scope set to `read`
          github_token: ${{secrets.GITHUB_TOKEN}}
          # Optional, workflow file name or ID
          # If not specified, will be inferred from run_id (if run_id is specified), or will be the current workflow
          workflow: runner.yml
          # If no workflow is set and workflow_search set to true, then the most recent workflow matching
          # all other criteria will be looked up instead of using the current workflow
          workflow_search: false
          # Optional, the status or conclusion of a completed workflow to search for
          # Can be one of a workflow conclusion:
          #   "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
          # Or a workflow status:
          #   "completed", "in_progress", "queued"
          # Use the empty string ("") to ignore status or conclusion in the search
          workflow_conclusion: success
          # Optional, will get head commit SHA
#          pr: ${{github.event.pull_request.number}}
          # Optional, no need to specify if PR is
#          commit: ${{github.event.pull_request.head.sha}}
          # Optional, will use the specified branch. Defaults to all branches
          branch: enable-collision-handling-with-mouse-captured
          # Optional, defaults to all types
#          event: push
          # Optional, will use specified workflow run
          # use ${{ github.event.workflow_run.id }} when your action runs in a workflow_run event
          # and wants to download from the triggering workflow run
#          run_id: 1122334455
          # Optional, run number from the workflow
#          run_number: 34
          # Optional, uploaded artifact name,
          # will download all artifacts if not specified
          # and extract them into respective subdirectories
          # https://github.com/actions/download-artifact#download-all-artifacts
          # is treated as a regular expression if input name_is_regexp is true
          # will download only those artifacts with a name that matches this regular expression
          # https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions
          name: linux-template-minimal
          # Optional, name is treated as a regular expression if set true
#          name_is_regexp: true
          # Optional, a directory where to extract artifact(s), defaults to the current directory
#          path: extract_here
          # Optional, defaults to current repo
          repo: pillowtrucker/godot
          # Optional, check the workflow run to whether it has an artifact
          # then will get the last available artifact from the previous workflow
          # default false, just try to download from the last one
          check_artifacts: true
          # Optional, search for the last workflow run whose stored an artifact named as in `name` input
          # default false
          search_artifacts: true
          # Optional, choose to skip unpacking the downloaded artifact(s)
          # default false
          skip_unpack: false
          # Optional, choose how to exit the action if no artifact is found
          # can be one of:
          #  "fail", "warn", "ignore"
          # default fail
          if_no_artifact_found: fail
          # Optional, ignore forks when searching for artifacts
          # default true
          allow_forks: false
      - name: Download godot windows
        if: ${{ matrix.os == 'windows-latest' }}
        id: download-godot-artifact-windows
        uses: dawidd6/action-download-artifact@v3
        with:
          # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
          # Required, if the artifact is from a different repo
          # Required, if the repo is private a Personal Access Token with `repo` scope is needed or GitHub token in a job where the permissions `action` scope set to `read`
          github_token: ${{secrets.GITHUB_TOKEN}}
          # Optional, workflow file name or ID
          # If not specified, will be inferred from run_id (if run_id is specified), or will be the current workflow
          workflow: runner.yml
          # If no workflow is set and workflow_search set to true, then the most recent workflow matching
          # all other criteria will be looked up instead of using the current workflow
          workflow_search: false
          # Optional, the status or conclusion of a completed workflow to search for
          # Can be one of a workflow conclusion:
          #   "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
          # Or a workflow status:
          #   "completed", "in_progress", "queued"
          # Use the empty string ("") to ignore status or conclusion in the search
          workflow_conclusion: success
          # Optional, will get head commit SHA
#          pr: ${{github.event.pull_request.number}}
          # Optional, no need to specify if PR is
#          commit: ${{github.event.pull_request.head.sha}}
          # Optional, will use the specified branch. Defaults to all branches
          branch: enable-collision-handling-with-mouse-captured
          # Optional, defaults to all types
#          event: push
          # Optional, will use specified workflow run
          # use ${{ github.event.workflow_run.id }} when your action runs in a workflow_run event
          # and wants to download from the triggering workflow run
#          run_id: 1122334455
          # Optional, run number from the workflow
#          run_number: 34
          # Optional, uploaded artifact name,
          # will download all artifacts if not specified
          # and extract them into respective subdirectories
          # https://github.com/actions/download-artifact#download-all-artifacts
          # is treated as a regular expression if input name_is_regexp is true
          # will download only those artifacts with a name that matches this regular expression
          # https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions
          name: windows-template
          # Optional, name is treated as a regular expression if set true
#          name_is_regexp: true
          # Optional, a directory where to extract artifact(s), defaults to the current directory
#          path: extract_here
          # Optional, defaults to current repo
          repo: pillowtrucker/godot
          # Optional, check the workflow run to whether it has an artifact
          # then will get the last available artifact from the previous workflow
          # default false, just try to download from the last one
          check_artifacts: true
          # Optional, search for the last workflow run whose stored an artifact named as in `name` input
          # default false
          search_artifacts: true
          # Optional, choose to skip unpacking the downloaded artifact(s)
          # default false
          skip_unpack: false
          # Optional, choose how to exit the action if no artifact is found
          # can be one of:
          #  "fail", "warn", "ignore"
          # default fail
          if_no_artifact_found: fail
          # Optional, ignore forks when searching for artifacts
          # default true
          allow_forks: false
